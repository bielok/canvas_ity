name: Build WASM Distribution

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Emscripten
      run: |
        # Try using system package manager first as fallback
        sudo apt-get update
        sudo apt-get install -y emscripten
        
        # Verify system emscripten installation
        emcc --version || echo "System emcc not found, trying manual install"
        
        # If system install didn't work, try the traditional approach
        if ! command -v emcc &> /dev/null; then
          # Get the emsdk repo
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          
          # Download and install the latest SDK tools
          ./emsdk install latest
          
          # Make the "latest" SDK "active" for the current user
          ./emsdk activate latest
          
          # Source environment for this step
          source ./emsdk_env.sh
        fi
        
    - name: Verify Emscripten installation
      run: |
        # Check if emcc is available (either from system or emsdk)
        if command -v emcc &> /dev/null; then
          echo "Using system emscripten"
          emcc --version
          em++ --version
        else
          echo "Using emsdk emscripten"
          cd emsdk
          source ./emsdk_env.sh
          emcc --version
          em++ --version
        fi
        
    - name: Build WASM star demo
      run: |
        # Source emsdk environment if it exists, otherwise use system emscripten
        if [ -d "emsdk" ]; then
          cd emsdk
          source ./emsdk_env.sh
          cd ..
        fi
        chmod +x build_wasm.sh
        ./build_wasm.sh
        
    - name: List generated files
      run: |
        ls -la dist/
        file dist/*
        
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: canvas_ity_wasm_star_demo
        path: |
          dist/
        retention-days: 30
        
    - name: Deploy to GitHub Pages (if main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: wasm-demo